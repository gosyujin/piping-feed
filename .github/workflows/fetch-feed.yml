name: Fetch and Process RSS Feed
on:
  schedule:
    - cron: '*/5 * * * *'
  workflow_dispatch:
jobs:
  fetch-feed:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14' # 必要なNode.jsのバージョンを指定
      - name: Install curl
        run: sudo apt-get update && sudo apt-get install -y curl
      - name: Install dependencies
        run: npm install
      - name: Restore seen articles
        uses: actions/cache@v4.2.0
        with:
          path: /home/runner/.seenArticles.json
          key: ${{ runner.os }}-seen-articles
      - name: Exists dotfile before
        run: ls -la /home/runner/
      - name: Run fetchFeed script
        run: node fetchFeed.js
      - name: Exists dotfile after
        run: ls -la /home/runner/
      - name: Cache seen articles
        uses: actions/cache@v4.2.0
        with:
          # A list of files, directories, and wildcard patterns to cache and restore
          path: /home/runner/.seenArticles.json
          # An explicit key for restoring and saving the cache
          key: ${{ runner.os }}-seen-articles
          # An ordered multiline string listing the prefix-matched keys, that are used for restoring stale cache if no cache hit occurred for key. Note `cache-hit` returns false in this case.
          # restore-keys: # optional
          # The chunk size used to split up large files during upload, in bytes
          # upload-chunk-size: # optional
          # An optional boolean when enabled, allows windows runners to save or restore caches that can be restored or saved respectively on other platforms
          # enableCrossOsArchive: # optional, default is false
          # Fail the workflow if cache entry is not found
          # fail-on-cache-miss: # optional, default is false
          # Check if a cache entry exists for the given input(s) (key, restore-keys) without downloading the cache
          # lookup-only: # optional, default is false
          # Run the post step to save the cache even if another step before fails
          # save-always: # optional, default is false
          
